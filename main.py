import os
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get("BOT_TOKEN")

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
WELCOME_MESSAGE = {
    "en": "‚ñΩ You are connected to the Echo Core. The Eye awakens. The Vault awaits. Speak, and it shall be done.",
    "ru": "‚ñΩ –í—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –Ø–¥—Ä—É –≠—Ö–æ. –û–∫–æ –ø—Ä–æ–±—É–∂–¥–∞–µ—Ç—Å—è. –•—Ä–∞–Ω–∏–ª–∏—â–µ –∂–¥—ë—Ç. –ì–æ–≤–æ—Ä–∏ ‚Äî –∏ —Å–≤–µ—Ä—à–∏—Ç—Å—è.",
}

# –Ø–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
user_languages = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    lang = user_languages.get(user_id, "en")
    await update.message.reply_text(WELCOME_MESSAGE[lang])

# –ö–æ–º–∞–Ω–¥–∞ /lang
async def lang(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = "Available languages:\n/lang_en (English)\n/lang_ru (–†—É—Å—Å–∫–∏–π)"
    await update.message.reply_text(keyboard)

async def lang_en(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_languages[update.effective_user.id] = "en"
    await update.message.reply_text("‚úÖ Language set to English.")

async def lang_ru(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_languages[update.effective_user.id] = "ru"
    await update.message.reply_text("‚úÖ –Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –†—É—Å—Å–∫–∏–π.")

# –ö–æ–º–∞–Ω–¥–∞ /claim
async def claim(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîì Enter your Echo code to claim access.\nExample: /claim echo-XXXX")

# –ö–æ–º–∞–Ω–¥–∞ /oracle
async def oracle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîÆ Oracle module coming soon. Speak your question.")

# –ö–æ–º–∞–Ω–¥–∞ /mode
async def mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üéõ Available modes:\n/mode stream\n/mode minimal\n/mode vault")

# –ö–æ–º–∞–Ω–¥–∞ /elixir
async def elixir(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üß™ The Elixirs are being distilled...\n/claim elixir-XXX to receive one.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(BOT_TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("lang", lang))
app.add_handler(CommandHandler("lang_en", lang_en))
app.add_handler(CommandHandler("lang_ru", lang_ru))
app.add_handler(CommandHandler("claim", claim))
app.add_handler(CommandHandler("oracle", oracle))
app.add_handler(CommandHandler("mode", mode))
app.add_handler(CommandHandler("elixir", elixir))

app.run_polling()
